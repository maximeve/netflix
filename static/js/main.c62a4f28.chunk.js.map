{"version":3,"sources":["axios.js","components/Row.js","requests.js","components/Banner.js","components/Nav.js","screens/HomeScreen.js","screens/firebase.js","screens/SignInScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/ProfileScreen.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["instance","axios","create","baseURL","opts","height","width","playerVars","autoplay","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","movieTrailer","name","source","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","err","handleClick","src","poster_path","backdrop_path","alt","id","videoId","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","lenght","substr","Nav","show","handleShow","history","useHistory","window","addEventListener","scrollY","removeEventListener","push","HomeScreen","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","SignInScreen","emailRef","useRef","passwordRef","placeholder","ref","type","e","preventDefault","signInWithEmailAndPassword","current","value","authUser","error","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setsignIn","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","ProfileScreen","useSelector","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","uid","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"yQAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,iC,wCCKPC,EAAO,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACVC,SAAU,IA8CCC,MA1Cf,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC5B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAqCF,mBAAS,IAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KA2BF,OATAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBnB,EAASoB,IAAIT,GADrC,cACQU,EADR,OAEEN,EAAUM,EAAQC,KAAKC,SAFzB,kBAGSF,GAHT,4CADc,uBAAC,WAAD,wBAMdG,KACC,CAACb,IAGF,sBAAKc,UAAU,MAAf,UACE,6BAAKf,IACL,qBAAKe,UAAU,eAAf,SACGX,EAAOY,KAAI,SAAAC,GAAK,OACf,qBAAKF,UAAS,sBAAiBb,GAAc,oBAAsBgB,QAAS,kBA9B9D,SAACD,GACnBE,QAAQC,IAAIH,GACRX,EACFC,EAAc,IAEdc,KAAkB,OAALJ,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOK,QAAvB,OAA+BL,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOM,UAAtC,OAAgDN,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAOO,gBAAiB,KACpFC,MAAK,SAACC,GACL,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDvB,EAAcoB,EAAUjB,IAAI,SAC3BqB,OAAM,SAAAC,GACPb,QAAQC,IAAIY,GACZzB,EAAc,OAmBoE0B,CAAYhB,IAAuBiB,IAAG,UA5ClH,wCA4CkH,OAAehC,EAAYe,EAAMkB,YAAclB,EAAMmB,eAAiBC,IAAKpB,EAAMjB,MAAOiB,EAAMjB,MAAQ,eAAnHiB,EAAMqB,SAGpHhC,GAAc,cAAC,IAAD,CAASiC,QAASjC,EAAYZ,KAAMA,QCrDnD8C,EAAU,mCAaDC,EAXE,CACbC,cAAa,qCAAiCF,GAC9CG,sBAAsB,2BAAD,OAA6BH,EAA7B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,MCuCPU,MA5Cf,WACE,IAekBC,EAAKC,EAfvB,EAA0BjD,mBAAS,IAAnC,mBAAOc,EAAP,KAAcoC,EAAd,KAmBA,OAjBA7C,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACwBnB,EAASoB,IAAI+B,EAASE,uBAD9C,cACQhC,EADR,OAEE0C,EACE1C,EAAQC,KAAKC,QACXyC,KAAKC,MAAMD,KAAKE,SAAW7C,EAAQC,KAAKC,QAAQ4C,OAAS,KAJ/D,kBAOS9C,GAPT,4CADc,uBAAC,WAAD,wBAUdG,KACC,IAOD,yBACEC,UAAU,SACV2C,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,oDAAD,cACsB3C,QADtB,IACsBA,OADtB,EACsBA,EAAOmB,cAD7B,cAGfyB,mBAAoB,iBAPxB,UAUE,sBAAK9C,UAAU,mBAAf,UACE,oBAAIA,UAAU,gBAAd,UAAoC,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOK,QAAP,OAAeL,QAAf,IAAeA,OAAf,EAAeA,EAAOjB,SAAtB,OAA+BiB,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOO,iBACrE,sBAAKT,UAAU,kBAAf,UACI,wBAAQA,UAAU,iBAAlB,kBACA,wBAAQA,UAAU,iBAAlB,wBAER,oBAAIA,UAAU,sBAAd,UArBgBoC,EAqB6B,OAAClC,QAAD,IAACA,OAAD,EAACA,EAAO6C,SArBhCV,EAqB0C,KApBnD,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKY,QAASX,EAAID,EAAIa,OAAO,EAAEZ,EAAI,GAAK,MAAOD,QAsBtD,qBAAKpC,UAAU,2B,cCZNkD,MA5Bf,WACI,MAA0B9D,oBAAS,GAAnC,mBAAO+D,EAAP,KAAYC,EAAZ,KACMC,EAAUC,cAiBhB,OAfA7D,qBAAU,WAQN,OAPA8D,OAAOC,iBAAiB,UAAU,WAC1BD,OAAOE,QAAU,IACjBL,GAAW,GAEXA,GAAW,MAGb,WACFG,OAAOG,oBAAoB,UAAS,kBAIzC,IAGC,sBAAK1D,UAAS,cAASmD,GAAQ,cAA/B,UACI,qBAAKnD,UAAU,YAAYmB,IAAI,4EAA4EhB,QAAS,kBAAKkD,EAAQM,KAAK,MAAMrC,IAAI,YAChJ,qBAAKtB,UAAU,cAAcmB,IAAI,yEAAyEhB,QAAS,kBAAKkD,EAAQM,KAAK,aAAarC,IAAI,eCJnJsC,MAjBf,WACI,OACI,gCACA,cAAC,EAAD,IACF,cAAC,EAAD,IACA,cAAC,EAAD,CAAK3E,MAAM,oBAAoBC,SAAUwC,EAASE,sBAAuBzC,YAAU,IACnF,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAUwC,EAASC,gBAC7C,cAAC,EAAD,CAAK1C,MAAM,YAAYC,SAAUwC,EAASG,gBAC1C,cAAC,EAAD,CAAK5C,MAAM,gBAAgBC,SAAUwC,EAASI,oBAC9C,cAAC,EAAD,CAAK7C,MAAM,gBAAgBC,SAAUwC,EAASK,oBAC9C,cAAC,EAAD,CAAK9C,MAAM,gBAAgBC,SAAUwC,EAASM,oBAC9C,cAAC,EAAD,CAAK/C,MAAM,iBAAiBC,SAAUwC,EAASO,qBAC/C,cAAC,EAAD,CAAKhD,MAAM,gBAAgBC,SAAUwC,EAASQ,yB,wBCF9C2B,GAFcC,IAASC,cAVN,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKYC,YACVR,IAASD,QC4BPU,MAvCf,WACE,IAAMC,EAAWC,iBAAO,MAClBC,EAAcD,iBAAO,MAqB3B,OACE,qBAAKzE,UAAU,eAAf,SACE,iCACE,yCACA,uBAAO2E,YAAY,QAAQC,IAAKJ,EAAUK,KAAK,UAC/C,uBAAOF,YAAY,WAAWC,IAAKF,EAAaG,KAAK,aACrD,wBAAQA,KAAK,SAAS1E,QAfN,SAAC2E,GACrBA,EAAEC,iBACFlB,EAAKmB,2BAA2BR,EAASS,QAAQC,MAAMR,EAAYO,QAAQC,OAAOxE,MAAK,SAACyE,GACtF/E,QAAQC,IAAI8E,MACXnE,OAAM,SAACoE,GACRC,MAAMD,EAAME,aAUV,qBACA,+BACE,sBAAMtF,UAAU,qBAAhB,8BACA,sBAAMA,UAAU,qBAAqBG,QA5B5B,SAAC2E,GAChBA,EAAEC,iBACFlB,EAAK0B,+BAA+Bf,EAASS,QAAQC,MAAMR,EAAYO,QAAQC,OAC5ExE,MAAK,SAACyE,GACL/E,QAAQC,IAAI8E,MAEbnE,OAAM,SAACoE,GACNC,MAAMD,EAAME,aAqBV,mCCDKE,MA/Bf,WAEI,MAA2BpG,oBAAS,GAApC,mBAAOqG,EAAP,KAAcC,EAAd,KAEA,OACI,sBAAK1F,UAAU,cAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,oBAAoBmB,IAAI,kEAAkEG,IAAI,YAC7G,wBAAQtB,UAAU,sBAAsBG,QAAS,kBAAKuF,GAAU,IAAhE,qBACA,qBAAK1F,UAAU,6BAEnB,qBAAKA,UAAU,oBAAf,SACMyF,EAAS,cAAC,EAAD,IACX,qCACA,0EACA,qEACA,wGACA,qBAAKzF,UAAU,qBAAf,SACI,iCACI,uBAAO6E,KAAK,QAAQF,YAAY,kBAChC,wBAAQ3E,UAAU,0BAA0BG,QAAS,kBAAKuF,GAAU,IAApE,uC,wBCtBXC,EAAYC,YAAY,CACnCrF,KAAM,OACNsF,aAAe,CACbC,KAAM,MAERC,SAAU,CACNC,MAAO,SAACC,EAAMC,GACVD,EAAMH,KAAOI,EAAOC,SAExBC,OAAQ,SAACH,GACLA,EAAMH,KAAO,SAOhB,EAA0BH,EAAUU,QAA5BL,EAAR,EAAQA,MAAOI,EAAf,EAAeA,OAERE,EAAa,SAAAL,GAAK,OAAIA,EAAMH,KAAKA,MAEhCH,IAAf,Q,OCQeY,MAxBf,WACI,IAAMT,EAAOU,YAAYF,GAEzB,OACI,sBAAKtG,UAAU,gBAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,8CACA,sBAAKA,UAAU,sBAAf,UACI,qBAAKmB,IAAI,gFAAgFG,IAAI,YAC7F,sBAAKtB,UAAU,yBAAf,UACA,6BAAK8F,EAAKW,QACV,sBAAKzG,UAAU,uBAAf,UACI,uCACA,sBACA,wBAAQG,QAAS,kBAAK0D,EAAK6C,WAAU1G,UAAU,yBAA/C,sCC4BT2G,MAxCf,WACE,IAAMb,EAAOU,YAAYF,GACnBM,EAAWC,cAkBjB,OAhBApH,qBAAU,WAaR,OAZoBoE,EAAKiD,oBAAmB,SAAC3B,GAEzCyB,EADEzB,EAEAa,EAAM,CACJe,IAAK5B,EAAS4B,IACdN,MAAOtB,EAASsB,QAIXL,UAIZ,CAACQ,IAGE,qBAAK5G,UAAU,MAAf,SACE,cAAC,IAAD,UACI8F,EAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkB,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,SAPJ,cAAC,EAAD,SCtBCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1G,MAAK,YAAkD,IAA/C2G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJCO,cAAe,CAC5BC,QAAS,CACL7B,KAAM8B,KCGZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BhB,K","file":"static/js/main.c62a4f28.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n})\n\nexport default instance;","import React, { useState,useEffect } from \"react\";\nimport instance from \"../axios\";\nimport './Row.css'\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\nconst opts = {\n  height: \"390\",\n  width: \"100%\",\n  playerVars: {\n    autoplay: 1,\n  }\n}\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] =  useState(\"\")\n\n    const handleClick = (movie) => {\n      console.log(movie)\n      if (trailerUrl) {\n        setTrailerUrl(\"\");\n      } else {\n        movieTrailer(movie?.title || movie?.name || movie?.source || movie?.original_name || \" \")\n        .then((url) =>{\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        }).catch(err=>{\n          console.log(err)\n          setTrailerUrl('');\n        })\n      }\n    }\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  \n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map(movie => (\n          <img className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} onClick={() => handleClick(movie)} key={movie.id} src={`${baseUrl}${isLargeRow? movie.poster_path : movie.backdrop_path}`} alt={movie.title? movie.title : 'movie image'}/>\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}></YouTube>}\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"7f1d9c87e2bb01df2a667648be70edd8\";\n\nconst requests = {\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}`,\n    fetchNetflixOriginals: `/discover/movie?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, { useEffect, useState } from \"react\";\nimport instance from \"../axios\";\nimport requests from \"../requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n){\n      return str?.lenght > n ? str.substr(0,n - 1) + \"...\": str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n      \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n      )`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">{movie?.name || movie?.title || movie?.original_name}</h1>\n        <div className=\"banner__buttons\">\n            <button className=\"banner__button\">Play</button>\n            <button className=\"banner__button\">My List</button>\n        </div>\n    <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\n      </div>\n      <div className=\"banner--fadeBottom\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React,{useEffect, useState} from 'react'\nimport { useHistory} from 'react-router-dom';\nimport \"./Nav.css\"\n\nfunction Nav() {\n    const [show,handleShow] = useState(false);\n    const history = useHistory()\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", ()=>{\n            if (window.scrollY > 100){\n                handleShow(true)\n            } else {\n                handleShow(false)\n            }\n        }) \n        return() => {\n            window.removeEventListener(\"scroll\",()=>{\n                return\n            })\n        }\n    }, [])\n\n    return ( \n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img className=\"nav__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" onClick={()=> history.push('/')} alt=\"Netflix\" />\n            <img className=\"nav__avatar\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" onClick={()=> history.push('/profile')} alt=\"Avatar\" />\n            \n        </div>\n    )\n}\n\nexport default Nav\n","import Row from '../components/Row'\nimport requests from '../requests';\nimport Banner from '../components/Banner';\nimport Nav from '../components/Nav';\n\nfunction HomeScreen() {\n    return (\n        <div>\n        <Nav/>\n      <Banner/>\n      <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow></Row>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}></Row>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}></Row>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}></Row>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}></Row>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}></Row>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}></Row>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}></Row>\n        </div>\n    )\n}\n\nexport default HomeScreen\n","\nimport firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA2rGolkFM3F7dw158ZipXyl46tgWJcDBk\",\n    authDomain: \"netflix-1e944.firebaseapp.com\",\n    projectId: \"netflix-1e944\",\n    storageBucket: \"netflix-1e944.appspot.com\",\n    messagingSenderId: \"172505211194\",\n    appId: \"1:172505211194:web:54d0396d70643e3ead3003\"\n  };\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { auth };\nexport default db;","import React, { useRef } from \"react\";\nimport \"./SignInScreen.css\";\nimport { auth } from \"./firebase\";\n\nfunction SignInScreen() {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n\n  const register = (e) => {\n    e.preventDefault();\n    auth.createUserWithEmailAndPassword(emailRef.current.value,passwordRef.current.value)\n      .then((authUser) => {\n        console.log(authUser);\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n  const signInHandler = (e) => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(emailRef.current.value,passwordRef.current.value).then((authUser)=>{\n      console.log(authUser)\n    }).catch((error)=>{\n      alert(error.message)\n    })\n  };\n\n  return (\n    <div className=\"signInScreen\">\n      <form>\n        <h1>Sign In</h1>\n        <input placeholder=\"Email\" ref={emailRef} type=\"email\" />\n        <input placeholder=\"Password\" ref={passwordRef} type=\"password\" />\n        <button type=\"submit\" onClick={signInHandler}>Sign In</button>\n        <h4>\n          <span className=\"signInScreen__gray\">New to Netflix? </span>\n          <span className=\"signInScreen__link\" onClick={register}>Sign up now.</span>\n        </h4>\n      </form>\n    </div>\n  );\n}\n\nexport default SignInScreen;\n","import React,{useState} from 'react';\nimport './LoginScreen.css';\nimport SignInScreen from '../screens/SignInScreen'\n\nfunction LoginScreen() {\n\n    const [signIn,setsignIn] = useState(false)\n\n    return (\n        <div className=\"loginScreen\">\n            <div className=\"loginScreen__background\">\n                <img className=\"loginScreen__logo\" src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"Netflix\"/>\n                <button className=\"loginScreen__button\" onClick={()=> setsignIn(true)}>Sign In</button>\n                <div className=\"loginScreen__gradient\"></div>\n            </div>\n            <div className=\"loginScreen__body\">\n                { signIn ? <SignInScreen /> : (\n                <>\n                <h1>Unlimited films, TV programmes and more.</h1>\n                <h2>Watch anywhere. Cancel at any time.</h2>\n                <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\n                <div className=\"loginScreen__input\">\n                    <form>\n                        <input type=\"email\" placeholder=\"Email Address\"/>\n                        <button className=\"loginScreen__getStarted\" onClick={()=> setsignIn(true)}>GET STARTED</button>\n                    </form>\n                </div>\n                </>\n                )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState : {\n    user: null\n  },\n  reducers: {\n      login: (state,action) => {\n          state.user = action.payload;\n      },\n      logout: (state) => {\n          state.user = null;\n      }\n\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { login, logout } = userSlice.actions\n\nexport const  selectUser = state => state.user.user\n\nexport default userSlice.reducer","import React from 'react';\nimport Nav from '../components/Nav';\nimport './ProfileScreen.css';\nimport { useSelector} from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport { auth } from './firebase'\n\nfunction ProfileScreen() {\n    const user = useSelector(selectUser);\n\n    return (\n        <div className=\"profileScreen\">\n            <Nav />\n            <div className=\"profileScreen__body\">\n                <h1>Edit Profile</h1>\n                <div className=\"profileScreen__info\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Profile\" />\n                    <div className=\"profileScreen__details\">\n                    <h2>{user.email}</h2>\n                    <div className=\"profileScreen__plans\">\n                        <h3>Plans</h3>\n                        <p></p>\n                        <button onClick={()=> auth.signOut()}className=\"profileScreen__signOut\">Sign Out</button>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import \"./App.css\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport { auth } from \"./screens/firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport ProfileScreen from './screens/ProfileScreen'\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            email: authUser.email,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n    return unsubscribe;\n  }, [dispatch]);\n\n  return (\n        <div className=\"App\">\n          <Router>\n            {!user ? (\n              <LoginScreen />\n            ) : (\n              <Switch>\n                <Route path=\"/profile\">\n                  <ProfileScreen />\n                </Route>\n                <Route path=\"/\" exact>\n                  <HomeScreen />\n                </Route>\n              </Switch>\n            )}\n          </Router>\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice'\n\nexport default configureStore({\n  reducer: {\n      user: userReducer\n  },\n})  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from 'react-redux';\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["axios.js","components/Row.js","requests.js","components/Banner.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","opts","height","width","playerVars","autoplay","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","movieTrailer","name","source","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","err","handleClick","src","poster_path","backdrop_path","alt","id","videoId","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","lenght","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.311213b0.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n})\n\nexport default instance;","import React, { useState,useEffect } from \"react\";\nimport instance from \"../axios\";\nimport './Row.css'\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer';\n\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\";\n\nconst opts = {\n  height: \"390\",\n  width: \"100%\",\n  playerVars: {\n    autoplay: 1,\n  }\n}\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] =  useState(\"\")\n\n    const handleClick = (movie) => {\n      console.log(movie)\n      if (trailerUrl) {\n        setTrailerUrl(\"\");\n      } else {\n        movieTrailer(movie?.title || movie?.name || movie?.source || movie?.original_name || \" \")\n        .then((url) =>{\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        }).catch(err=>{\n          console.log(err)\n          setTrailerUrl('');\n        })\n      }\n    }\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  \n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map(movie => (\n          <img className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} onClick={() => handleClick(movie)} key={movie.id} src={`${baseUrl}${isLargeRow? movie.poster_path : movie.backdrop_path}`} alt={movie.title? movie.title : 'movie image'}/>\n        ))}\n      </div>\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}></YouTube>}\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"7f1d9c87e2bb01df2a667648be70edd8\";\n\nconst requests = {\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}`,\n    fetchNetflixOriginals: `/discover/movie?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, { useEffect, useState } from \"react\";\nimport instance from \"../axios\";\nimport requests from \"../requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n){\n      return str?.lenght > n ? str.substr(0,n - 1) + \"...\": str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n      \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n      )`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">{movie?.name || movie?.title || movie?.original_name}</h1>\n        <div className=\"banner__buttons\">\n            <button className=\"banner__button\">Play</button>\n            <button className=\"banner__button\">My List</button>\n        </div>\n    <h1 className=\"banner__description\">{truncate(movie?.overview, 150)}</h1>\n      </div>\n      <div className=\"banner--fadeBottom\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React,{useEffect, useState} from 'react'\nimport \"./Nav.css\"\n\nfunction Nav() {\n    const [show,handleShow] = useState(false)\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", ()=>{\n            if (window.scrollY > 100){\n                handleShow(true)\n            } else {\n                handleShow(false)\n            }\n        }) \n        return() => {\n            window.removeEventListener(\"scroll\")\n        }\n    }, [])\n\n    return ( \n        <div className={`nav ${show && \"nav__black\"}`}>\n            <img className=\"nav__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix\" />\n            <img className=\"nav__avatar\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" alt=\"Avatar\" />\n            \n        </div>\n    )\n}\n\nexport default Nav\n","import './App.css';\nimport Row from './components/Row'\nimport requests from './requests';\nimport Banner from './components/Banner';\nimport Nav from './components/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow></Row>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}></Row>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}></Row>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}></Row>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}></Row>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}></Row>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}></Row>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}></Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}